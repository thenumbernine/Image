distName='Image'
distType='lib'
depends:append{'../Common', '../Tensor'}

local not_msvc_or_mingw = platform ~= 'msvc' and platform ~= 'mingw'
Image_supports = {
	bmp = {supports=true},
	fits = {supports=not_msvc_or_mingw},
	jpeg = {supports=true},
	png = {supports=true},
	ppm = {supports=true},
	tga = {supports=true},
	tiff = {supports=true},
	gif = {supports=true},
}

-- [[ ugly way to specify a dependeny rule
do
	local dst = 'include/Image/Config.h'
	local targets = _G.require 'make.targets'{{
		dsts = {dst},
		srcs = {'buildinfo'},
		rule = function(r)
			path(dst):write(table{
				'#pragma once',
				'',
				'// This file is generated by buildinfo',
				'',
				}:append(
					table.map(
						Image_supports,
						function(info, format, t)
							if info.supports then
								return '#define IMAGE_SUPPORTS_'..format:upper(), #t+1
							end
						end
					)
				):concat'\n'..'\n'
			)
		end,
	}}
	targets:run(dst)
end
--]]

if Image_supports.fits then
	if platform == 'linux'
	or platform == 'osx'
	then
		env:addPackages'cfitsio'
	end
end
if Image_supports.jpeg then
	if platform == 'linux'
	or platform == 'osx'
	then
		env:addPackages'libjpeg'
	end
end
if Image_supports.png then
	if platform == 'linux'
	or platform == 'osx'
	then
		env:addPackages'libpng'
--[=[
	elseif platform == 'msvc' then
		include:insert(home..[[\Projects\other\libpng-1.6.37]])
		dynamicLibs:insert(home..[[\bin\x64\png.lib]])
--]=]
	end
end
if Image_supports.tiff then
	if platform == 'linux'
	or platform == 'osx'
	then
		env:addPackages'libtiff-4'
	end
end
if Image_supports.gif then
	if platform == 'linux'
	or platform == 'osx'
	then
		-- linux libgif has no pkg-config?
		-- neither does osx brew giflib?
		libs:insert'gif'
	end
end
